다른 프로세스가 파일을 사용 중이기 때문에 프로세스가 액세스 할 수 없습니다.
----cmd----netstat -nao입력----같은 포트를 사용하고 있는 pid를 죽이기(taskkill /pid 숫자 /f


start.bat 만들기
메모장에

@echo off
java -jar -Xms1G -Xmx1G 버킷이름.jar
pause

또 다른 명령어들도 많음
-Xms1G = 서버에 넣을 최대 램
-Xmx1G = 서버에 넣을 최소 램


다른 start.bat 


@echo off
title 마인크래프트 1.12.2 모드버킷 20180406
:start
cls
echo.
echo.
echo.
echo.
echo.
echo.
echo     램 할당량 선택, 설치된 모드의 메모리 양에 따라 선택, 작은 모드 한두개일 경우 1기가로 충분합니다.
echo.
echo.
echo     1.   램 1GB
echo.
echo     2.   램 2GB
echo.
echo     3.   램 4GB
echo.
echo     4.   램 8GB
echo.
echo     5.   램 16GB
echo.
echo     설치된 모드에 따른 적절한 램 용량 확인 법은 이응미음 블로그를 확인해주세요
echo.
set /p b=-------------원하는 램 할당량을 번호로 입력후 엔터키를 눌러주세요 :
if %b%==2 goto RAM1
if %b%==3 goto RAM2
if %b%==4 goto RAM4
if %b%==5 goto RAM8
if %b%==6 goto RAM16

:RAM1

java -Xms1G -Xmx1G -jar forge-1.12.2-14.23.5.2838-universal.jar
PAUSE
goto start


:RAM2

java -Xms1G -Xmx2G -jar forge-1.12.2-14.23.5.2838-universal.jar
PAUSE
goto start


:RAM4

java -Xms1G -Xmx4G -jar forge-1.12.2-14.23.5.2838-universal.jar
PAUSE
goto start


:RAM_8

java -Xms1G -Xmx8G -jar forge-1.12.2-14.23.5.2838-universal.jar
PAUSE
goto start


:RAM_16

java -Xms1G -Xmx16G -jar forge-1.12.2-14.23.5.2838-universal.jar
PAUSE
goto start

이응미음



New - java project - 이름은 하고싶은거
src - New - package - 이름은 com.닉네임.하고싶은거
package - Class - 이름은 Main
Main - Build Path - Configure Build Path - Java Build Path - Libraries - Add External JARs... - 내 서버 파일(craftbukkit.jar)

플러그인 작성 후

project - New - File - 이름은 plugin.yml
내용
name: 플러그인 이름 하고싶은거
main: 패키지이름.Class이름
version: 하고싶은 숫자
commands:
    give:




1, Enable 과 Disable - 서버 시작과 마지막

package com.pigpig.testplugin;

import org.bukkit.plugin.java.JavaPlugin;

public class Main extends JavaPlugin{

	public void onEnable()
	{
		System.out.println("플러그인이 시작됩니다.");
		//"플러그인이 시작됩니다" 이라는 글씨를 서버에 로그에 출력하게 됩니다.
	}
	
	public void onDisable()
	{
		System.out.println("플러그인이 종료됩니다.");
		//위와 같은 형식입니다.
	}
	
	
}




2, Add Command - 커맨드를 추가함(색상도 가능), onCommand로 명령어 추가가능

package com.pigpig.testplugin;

import org.bukkit.ChatColor;
import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.plugin.java.JavaPlugin;

public class Main extends JavaPlugin{

	public void onEnable()
	{
		System.out.println("플러그인이 시작됩니다.");
		//"플러그인이 시작됩니다" 이라는 글씨를 서버에 로그에 출력하게 됩니다.
	}
	
	public void onDisable()
	{
		System.out.println("플러그인이 종료됩니다.");
		//위와 같은 형식입니다.
	}
	
	public boolean onCommand(CommandSender sender, Command command, String label, String[] args) {
		Player player = (Player) sender; // 커맨드를 친 플레이어의 값을 player 라는 변수에 저장한다.
		if(label.equalsIgnoreCase("test")) //만약 명령어로 /test 이라고 쳤다면
		{
			player.sendMessage(ChatColor.GOLD + "안녕!");
			//플레이어에게 안녕! 이라고 메시지를 전송한다.
			//ChatColor.GOLD 를 추가함으로서 금색으로 안녕! 이라고 메시지를 전송합니다.
		}
		return false;
	}
	
}



3, Add Long Command - 길이가 긴 커맨드를 추가한다,


package com.pigpig.testplugin;

import org.bukkit.ChatColor;
import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.plugin.java.JavaPlugin;

public class Main extends JavaPlugin{

	public void onEnable()
	{
		System.out.println("플러그인이 시작됩니다.");
		//"플러그인이 시작됩니다" 이라는 글씨를 서버에 로그에 출력하게 됩니다.
	}
	
	public void onDisable()
	{
		System.out.println("플러그인이 종료됩니다.");
		//위와 같은 형식입니다.
	}
	
	public boolean onCommand(CommandSender sender, Command command, String label, String[] args) {
		Player player = (Player) sender; // 커맨드를 친 플레이어의 값을 player 라는 변수에 저장한다.
		if(label.equalsIgnoreCase("test")) //만약 명령어로 /test 이라고 쳤다면
		{
			if(0 < args.length) // 명령어의 길이가 0보다 많을 때 즉, /test ~~ 하고 하위 명령어가 있을 때.
			{
				if(args[0].equalsIgnoreCase("hello")) // 하위 명령어가 hello 즉, /test hello 일 경우
				{
					if(1 < args.length)// 더 하위 명령어가 있을 때 /test hello ~~ 식으로
					{
						if(args[1].equalsIgnoreCase("bye"))
						{
							player.sendMessage(ChatColor.AQUA + "방금 안녕이라면서 잘가래...");
							// 플레이어에게 아쿠아 색으로 방금 안녕이라면서 잘가래... 라고 출력합니다
						}
					}else {// 더 이상 하위 명령어 없이 /test hello 일 때
					player.sendMessage(ChatColor.RED + "안녕!");
					// 빨간색으로 안녕! 이라고 메시지를 보낸다.
					}
				}
			} else{ //하위 명령어 없이 그냥 /test 이라고만 쳤을 때.
			player.sendMessage(ChatColor.GOLD + "/test hello 아니면 /test hello bye");
			//플레이어에게 위의 메시지를 전송.
			//ChatColor.GOLD 를 추가함으로서 금색으로 메시지를 전송합니다.
			}
		}
		return false;
	}
	
	}



4, Add Listener - Bukkit.getPluginManager().registerEvents(this, this); and EventHandler를 사용함 => 이벤트를 등록 사용

package com.pigpig.testplugin;

import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.Material;
import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockBreakEvent;
import org.bukkit.event.block.BlockPlaceEvent;
import org.bukkit.plugin.java.JavaPlugin;

public class Main extends JavaPlugin implements Listener{ // implements Listener 은 이 메인클래스에서 이벤트를 쓸 수 있게 해줍니다

	public void onEnable()
	{
		Bukkit.getPluginManager().registerEvents(this, this); // 이 메인 클래스를 이벤트에 등록합니다.
		System.out.println("플러그인이 시작됩니다.");
		//"플러그인이 시작됩니다" 이라는 글씨를 서버에 로그에 출력하게 됩니다.
	}
	
	public void onDisable()
	{
		System.out.println("플러그인이 종료됩니다.");
		//위와 같은 형식입니다.
	}
	
	public boolean onCommand(CommandSender sender, Command command, String label, String[] args) {
		Player player = (Player) sender; // 커맨드를 친 플레이어의 값을 player 라는 변수에 저장한다.
		if(label.equalsIgnoreCase("test")) //만약 명령어로 /test 이라고 쳤다면
		{
			if(0 < args.length) // 명령어의 길이가 0보다 많을 때 즉, /test ~~ 하고 하위 명령어가 있을 때.
			{
				if(args[0].equalsIgnoreCase("hello")) // 하위 명령어가 hello 즉, /test hello 일 경우
				{
					if(1 < args.length)// 더 하위 명령어가 있을 때 /test hello ~~ 식으로
					{
						if(args[1].equalsIgnoreCase("bye"))
						{
							player.sendMessage(ChatColor.AQUA + "방금 안녕이라면서 잘가래...");
							// 플레이어에게 아쿠아 색으로 방금 안녕이라면서 잘가래... 라고 출력합니다
						}
					}else {// 더 이상 하위 명령어 없이 /test hello 일 때
					player.sendMessage(ChatColor.RED + "안녕!");
					// 빨간색으로 안녕! 이라고 메시지를 보낸다.
					}
				}
			} else{ //하위 명령어 없이 그냥 /test 이라고만 쳤을 때.
			player.sendMessage(ChatColor.GOLD + "/test hello 아니면 /test hello bye");
			//플레이어에게 위의 메시지를 전송.
			//ChatColor.GOLD 를 추가함으로서 금색으로 메시지를 전송합니다.
			}
		}
		return false;
	}
	@EventHandler // EventHandler 는 아래의 public 문을 이벤트에 등록해줍니다
	public void onPlayerBlockPlace(BlockPlaceEvent event) // BlockPlaceEvent 말고도 많은 이벤트가 있습니다.
	{
		Player player = event.getPlayer(); // 이벤트를 실행한 사람이 누군지 불러와 player에 지정합니다
		if(event.getBlock().getType() == Material.REDSTONE_TORCH_ON) //먼약 이벤트로 켜져있는 레드스톤횃불을 놓는다면.
		{
			player.sendMessage(ChatColor.BLUE + "레드스톤횃불을" + player.getName() + "가 놓았습니다.");
			//이벤트 실행자에게 파란색으로 "레드스톤횃불을 (이벤트 실행자의 이름) 가 놓았습니다." 라고 보낸다.
		}
	}
	
	@EventHandler
	public void onPlayerDisBlock(BlockBreakEvent event) // 이 이벤트를 블럭을 부셨을 때 입니다.
	{
		Player player = event.getPlayer(); // 이벤트를 실행한 사람이 누군지 불러와 player 변수에 지정합니다.
		if(event.getBlock().getType() == Material.REDSTONE_TORCH_ON)
		{
			player.sendMessage(ChatColor.RED + "레드스톤횃불을" + player.getName() + "가 부셨습니다.");
			// 이벤트 실행자에게 빨간색으로 "레드스톤횃불을 (이벤트 실행자의 이름) 가 부셨습니다." 라고 보낸다.
		}
	}
	}


5, Add Custom Item - 커스텀 아이템 만들 수 있음 , /횃불 하면 횃불 주는 정도?


package com.pigpig.customitem;

import org.bukkit.ChatColor;
import org.bukkit.Material;
import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;
import org.bukkit.plugin.java.JavaPlugin;

public class Main extends JavaPlugin{
	
	public boolean onCommand(CommandSender sender, Command command, String label, String [] args){
		Player player = (Player) sender; //명령어를 사용한 사람의 값을 player 로 정의합니다.
		if(label.equalsIgnoreCase("give")) //플레이어가 /give라고 했을 때
		{
			if(0 < args.length) //하위 명령어가 있다면
			{
				if(args[0].equalsIgnoreCase("Stick")) //그 첫번째 하위 명령어가 stick이면.
				{
					ItemStack is = new ItemStack(Material.STICK);
					//새로운 아이템으로 막대기를 만들고 그것을 is라고 정의합니다.
					ItemMeta im = is.getItemMeta();
					//im이라는 변수에 is의 아이템메타를 가져와서 정의합니다.
					im.setDisplayName(ChatColor.LIGHT_PURPLE + "막대기");
					//im이라는 아이템메타에서 아이템의 이름을 밝은 보라색 막대기로 변경합니다
					is.setItemMeta(im);
					//im에서 수정한 아이템메타를 is에 넣습니다.
					player.getInventory().addItem(is);
					//플레이어에게 위에서 만든 is라는 아이템을 줍니다.
				}
				else if(args[0].equalsIgnoreCase("torch")) //하위명령어가 stick이 아니고 torch면.
				{
					ItemStack is1 = new ItemStack(Material.TORCH);
					//새로운 아이템으로 횃불를 만들고 그것을 is1라고 정의합니다.
					ItemMeta im1 = is1.getItemMeta();
					//im1이라는 변수에 is1의 아이템메타를 가져와서 정의합니다.
					im1.setDisplayName(ChatColor.LIGHT_PURPLE + "횃불");
					//im1이라는 아이템메타에서 아이템의 이름을 밝은 보라색 횃불로 변경합니다
					is1.setItemMeta(im1);
					//im1에서 수정한 아이템메타를 is1에 넣습니다.
					player.getInventory().addItem(is1);
					//플레이어에게 위에서 만든 is1라는 아이템을 줍니다.
					
				}else { //하위 명령어가 stick도 torch도 아닐 때
					player.sendMessage(ChatColor.RED + "그 아이템은 존재하지 않습니다.");
					//플레이어에게 빨간색으로 그 아이템은 존재하지 않습니다. 라고 보낸다
				}
			}else {//하위 명령어가 없다면
				player.sendMessage(ChatColor.RED + "[명령어] /give stick");
				//플레이어에게 빨간색으로 [명령어] /give stick 이라고 보낸다.
				player.sendMessage(ChatColor.RED + "[명령어] /give torch");
				//플레이어에게 빨간색으로 [명령어] /give torch 이라고 보낸다.
			}
		}
			return false;
	}

}


6, Create New Inventory